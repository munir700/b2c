// Generated by data binding compiler. Do not edit!
package co.yap.sendmoney.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import co.yap.sendmoney.R;
import co.yap.sendmoney.addbeneficiary.adaptor.RAKBankItemViewModel;
import co.yap.widgets.CoreCircularImageView;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class ItemRakBankBinding extends ViewDataBinding {
  @NonNull
  public final LinearLayout content;

  @NonNull
  public final CoreCircularImageView imgProfile;

  @NonNull
  public final ConstraintLayout lyContact;

  @NonNull
  public final TextView tvName;

  @NonNull
  public final TextView tvNumber;

  @Bindable
  protected RAKBankItemViewModel mViewModel;

  protected ItemRakBankBinding(Object _bindingComponent, View _root, int _localFieldCount,
      LinearLayout content, CoreCircularImageView imgProfile, ConstraintLayout lyContact,
      TextView tvName, TextView tvNumber) {
    super(_bindingComponent, _root, _localFieldCount);
    this.content = content;
    this.imgProfile = imgProfile;
    this.lyContact = lyContact;
    this.tvName = tvName;
    this.tvNumber = tvNumber;
  }

  public abstract void setViewModel(@Nullable RAKBankItemViewModel viewModel);

  @Nullable
  public RAKBankItemViewModel getViewModel() {
    return mViewModel;
  }

  @NonNull
  public static ItemRakBankBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.item_rak_bank, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ItemRakBankBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ItemRakBankBinding>inflateInternal(inflater, R.layout.item_rak_bank, root, attachToRoot, component);
  }

  @NonNull
  public static ItemRakBankBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.item_rak_bank, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ItemRakBankBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ItemRakBankBinding>inflateInternal(inflater, R.layout.item_rak_bank, null, false, component);
  }

  public static ItemRakBankBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ItemRakBankBinding bind(@NonNull View view, @Nullable Object component) {
    return (ItemRakBankBinding)bind(component, view, R.layout.item_rak_bank);
  }
}
